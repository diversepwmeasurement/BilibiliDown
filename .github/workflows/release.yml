jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.ref }}
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      id: tag_latest
      name: Read tag_latest and Save build info
      run: 'python ./.github/scripts/read_version_and_save_build_info.py

        '
    - continue-on-error: true
      name: Package Jar
      run: 'chmod +x package.sh

        ./package.sh

        chmod +x .github/scripts/package_launcher.sh

        ./.github/scripts/package_launcher.sh

        '
    - continue-on-error: true
      env:
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      name: Test Jar
      run: 'chmod +x .github/scripts/test_jar.sh

        ./.github/scripts/test_jar.sh

        '
    - continue-on-error: true
      env:
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      name: ZIP files
      run: 'chmod +x .github/scripts/gen_zip_sha1_for_release.sh

        ./.github/scripts/gen_zip_sha1_for_release.sh

        '
    - continue-on-error: true
      name: Create Release
      uses: softprops/action-gh-release@master
      with:
        body_path: ./.github/release.info
        draft: false
        files: 'BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip

          BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip.sha1

          BilibiliDown.v${{steps.tag_latest.outputs.value}}.win_x64_jre11.release.zip

          BilibiliDown.v${{steps.tag_latest.outputs.value}}.win_x64_jre11.release.zip.sha1

          '
        name: BilibiliDown - v${{steps.tag_latest.outputs.value}}
        prerelease: false
        tag_name: V${{steps.tag_latest.outputs.value}}
    - continue-on-error: true
      env:
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      if: ${{ env.SUPABASE_ANON_KEY != ''}}
      name: Upload release to supabase
      run: "chmod +x .github/scripts/upload_supabase.sh\n./.github/scripts/upload_supabase.sh\
        \     \n    \n"
    - continue-on-error: true
      env:
        CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        SHA1_FILE_NAME: BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip.sha1
        ZIP_FILE_NAME: BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip
      if: ${{ env.CLOUDINARY_API_KEY != '' && env.CLOUDINARY_API_SECRET != ''}}
      name: Upload release to cloudinary
      run: "chmod +x .github/scripts/upload_cloudinary.sh\n./.github/scripts/upload_cloudinary.sh\
        \              \n"
    - continue-on-error: true
      env:
        BITBUCKET_TOKEN: ${{ secrets.BITBUCKET_TOKEN }}
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      if: ${{ env.BITBUCKET_TOKEN != ''}}
      name: Upload release to bitbucket
      run: "chmod +x .github/scripts/upload_bitbucket.sh\n./.github/scripts/upload_bitbucket.sh\
        \                    \n    \n"
    - continue-on-error: true
      env:
        GITEE_AUTH: ${{ secrets.GITEE_AUTH }}
      if: ${{ env.GITEE_AUTH != ''}}
      name: Sync Push to Gitee
      run: 'chmod +x .github/scripts/sync_push_to_gitee.sh

        ./.github/scripts/sync_push_to_gitee.sh

        '
    - continue-on-error: true
      env:
        BITBUCKET_TOKEN: ${{ secrets.BITBUCKET_TOKEN }}
      if: ${{ env.BITBUCKET_TOKEN != ''}}
      name: Sync Push to Bitbucket
      run: 'chmod +x .github/scripts/sync_push_to_bitbucket.sh

        ./.github/scripts/sync_push_to_bitbucket.sh'
name: Build Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
