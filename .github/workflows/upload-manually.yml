jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.ref }}
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      id: tag_latest
      name: Read tag_latest and Save build info
      run: 'python ./.github/scripts/read_version_and_save_build_info.py

        '
    - continue-on-error: true
      name: Download files
      run: 'wget https://github.com/nICEnnnnnnnLee/BilibiliDown/releases/download/V${{steps.tag_latest.outputs.value}}/BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip

        wget https://github.com/nICEnnnnnnnLee/BilibiliDown/releases/download/V${{steps.tag_latest.outputs.value}}/BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip.sha1

        '
    - continue-on-error: true
      env:
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      if: ${{ always() && env.SUPABASE_ANON_KEY != '' && github.event.inputs.supabase
        == 'true'}}
      name: Upload release to supabase
      run: "chmod +x .github/scripts/upload_supabase.sh\n./.github/scripts/upload_supabase.sh\
        \        \n    \n"
    - continue-on-error: true
      env:
        CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        SHA1_FILE_NAME: BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip.sha1
        ZIP_FILE_NAME: BilibiliDown.v${{steps.tag_latest.outputs.value}}.release.zip
      if: ${{ always() && env.CLOUDINARY_API_KEY != '' && env.CLOUDINARY_API_SECRET
        != '' && github.event.inputs.cloudinary == 'true'}}
      name: Upload release to cloudinary
      run: "chmod +x .github/scripts/upload_cloudinary.sh\n./.github/scripts/upload_cloudinary.sh\
        \        \n"
    - continue-on-error: true
      env:
        BITBUCKET_TOKEN: ${{ secrets.BITBUCKET_TOKEN }}
        VERSION_NUMBER: ${{ steps.tag_latest.outputs.value }}
      if: ${{ always() && env.BITBUCKET_TOKEN != '' && github.event.inputs.bitbucket
        == 'true'}}
      name: Upload release to bitbucket
      run: "chmod +x .github/scripts/upload_bitbucket.sh\n./.github/scripts/upload_bitbucket.sh\
        \                    \n    \n    \n"
    - continue-on-error: true
      env:
        GITEE_AUTH: ${{ secrets.GITEE_AUTH }}
      if: ${{ always() && env.GITEE_AUTH != '' && github.event.inputs.giteePush ==
        'true'}}
      name: Sync Push to Gitee
      run: "chmod +x .github/scripts/sync_push_to_gitee.sh\n./.github/scripts/sync_push_to_gitee.sh\
        \            \n"
    - continue-on-error: true
      env:
        BITBUCKET_TOKEN: ${{ secrets.BITBUCKET_TOKEN }}
      if: ${{ always() && env.BITBUCKET_TOKEN != '' && github.event.inputs.bitbucketPush
        == 'true'}}
      name: Sync Push to Bitbucket
      run: 'chmod +x .github/scripts/sync_push_to_bitbucket.sh

        ./.github/scripts/sync_push_to_bitbucket.sh'
name: Upload Zips
on:
  repository_dispatch:
    types: trigger-ga___upload-manually.yml
